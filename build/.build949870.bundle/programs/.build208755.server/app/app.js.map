{"version":3,"sources":["meteor://ðŸ’»app/lib/collections/university_info/department.js","meteor://ðŸ’»app/lib/collections/university_info/faculty.js","meteor://ðŸ’»app/lib/collections/university_info/field_of_study.js","meteor://ðŸ’»app/lib/collections/university_info/study_course.js","meteor://ðŸ’»app/lib/collections/university_info/study_section.js","meteor://ðŸ’»app/lib/collections/university_info/study_subject.js","meteor://ðŸ’»app/lib/collections/faculties.js","meteor://ðŸ’»app/lib/collections/student_information.js","meteor://ðŸ’»app/lib/collections/users_information.js","meteor://ðŸ’»app/lib/controllers/add_student_information_controller.js","meteor://ðŸ’»app/lib/controllers/home_controller.js","meteor://ðŸ’»app/lib/controllers/login_controller.js","meteor://ðŸ’»app/lib/controllers/manage_university_info_controller.js","meteor://ðŸ’»app/lib/controllers/register_controller.js","meteor://ðŸ’»app/lib/controllers/show_student_information_controller.js","meteor://ðŸ’»app/lib/methods.js","meteor://ðŸ’»app/lib/routes.js","meteor://ðŸ’»app/server/bootstrap.js","meteor://ðŸ’»app/server/methods.js","meteor://ðŸ’»app/server/main.js"],"names":[],"mappings":"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","file":"/app.js","sourcesContent":["Department = new Mongo.Collection('department');\n\n\nif (Meteor.isServer) {\n  Department.allow({\n    insert: function (userId, doc) {\n      return true;\n    },\n\n    update: function (userId, doc, fieldNames, modifier) {\n      return true;\n    },\n\n    remove: function (userId, doc) {\n      return true;\n    }\n  });\n\n  Department.deny({\n    insert: function (userId, doc) {\n      return false;\n    },\n\n    update: function (userId, doc, fieldNames, modifier) {\n      return false;\n    },\n\n    remove: function (userId, doc) {\n      return false;\n    }\n  });\n}\n","Faculty = new Mongo.Collection('faculty');\n\n\nif (Meteor.isServer) {\n  Faculty.allow({\n    insert: function (userId, doc) {\n      return true;\n    },\n\n    update: function (userId, doc, fieldNames, modifier) {\n      return true;\n    },\n\n    remove: function (userId, doc) {\n      return true;\n    }\n  });\n\n  Faculty.deny({\n    insert: function (userId, doc) {\n      return false;\n    },\n\n    update: function (userId, doc, fieldNames, modifier) {\n      return false;\n    },\n\n    remove: function (userId, doc) {\n      return false;\n    }\n  });\n}\n","FieldOfStudy = new Mongo.Collection('field_of_study');\n\n\nif (Meteor.isServer) {\n  FieldOfStudy.allow({\n    insert: function (userId, doc) {\n      return false;\n    },\n\n    update: function (userId, doc, fieldNames, modifier) {\n      return false;\n    },\n\n    remove: function (userId, doc) {\n      return false;\n    }\n  });\n\n  FieldOfStudy.deny({\n    insert: function (userId, doc) {\n      return true;\n    },\n\n    update: function (userId, doc, fieldNames, modifier) {\n      return true;\n    },\n\n    remove: function (userId, doc) {\n      return true;\n    }\n  });\n}\n","StudyCourse = new Mongo.Collection('study_course');\n\n\nif (Meteor.isServer) {\n  StudyCourse.allow({\n    insert: function (userId, doc) {\n      return false;\n    },\n\n    update: function (userId, doc, fieldNames, modifier) {\n      return false;\n    },\n\n    remove: function (userId, doc) {\n      return false;\n    }\n  });\n\n  StudyCourse.deny({\n    insert: function (userId, doc) {\n      return true;\n    },\n\n    update: function (userId, doc, fieldNames, modifier) {\n      return true;\n    },\n\n    remove: function (userId, doc) {\n      return true;\n    }\n  });\n}\n","StudySection = new Mongo.Collection('study_section');\n\n\nif (Meteor.isServer) {\n  StudySection.allow({\n    insert: function (userId, doc) {\n      return false;\n    },\n\n    update: function (userId, doc, fieldNames, modifier) {\n      return false;\n    },\n\n    remove: function (userId, doc) {\n      return false;\n    }\n  });\n\n  StudySection.deny({\n    insert: function (userId, doc) {\n      return true;\n    },\n\n    update: function (userId, doc, fieldNames, modifier) {\n      return true;\n    },\n\n    remove: function (userId, doc) {\n      return true;\n    }\n  });\n}\n","StudySubject = new Mongo.Collection('study_subject');\n\n\nif (Meteor.isServer) {\n  StudySubject.allow({\n    insert: function (userId, doc) {\n      return false;\n    },\n\n    update: function (userId, doc, fieldNames, modifier) {\n      return false;\n    },\n\n    remove: function (userId, doc) {\n      return false;\n    }\n  });\n\n  StudySubject.deny({\n    insert: function (userId, doc) {\n      return true;\n    },\n\n    update: function (userId, doc, fieldNames, modifier) {\n      return true;\n    },\n\n    remove: function (userId, doc) {\n      return true;\n    }\n  });\n}\n","Faculties = new Mongo.Collection('faculties');\n\n\nif (Meteor.isServer) {\n  Faculties.allow({\n    insert: function (userId, doc) {\n      return true;\n    },\n\n    update: function (userId, doc, fieldNames, modifier) {\n      return true;\n    },\n\n    remove: function (userId, doc) {\n      return true;\n    }\n  });\n\n  Faculties.deny({\n    insert: function (userId, doc) {\n      return false;\n    },\n\n    update: function (userId, doc, fieldNames, modifier) {\n      return false;\n    },\n\n    remove: function (userId, doc) {\n      return false;\n    }\n  });\n}\n","StudentInformation = new Mongo.Collection('student_information');\n\n\nif (Meteor.isServer) {\n  StudentInformation.allow({\n    insert: function (userId, doc) {\n      return true;\n    },\n\n    update: function (userId, doc, fieldNames, modifier) {\n      return true;\n    },\n\n    remove: function (userId, doc) {\n      return true;\n    }\n  });\n\n  StudentInformation.deny({\n    insert: function (userId, doc) {\n      return false;\n    },\n\n    update: function (userId, doc, fieldNames, modifier) {\n      return false;\n    },\n\n    remove: function (userId, doc) {\n      return false;\n    }\n  });\n}\n","UsersInformation = new Mongo.Collection('users_information');\n\n\nif (Meteor.isServer) {\n  UsersInformation.allow({\n    insert: function (userId, doc) {\n      return true;\n    },\n\n    update: function (userId, doc, fieldNames, modifier) {\n      return true;\n    },\n\n    remove: function (userId, doc) {\n      return true;\n    }\n  });\n\n  UsersInformation.deny({\n    insert: function (userId, doc) {\n      return false;\n    },\n\n    update: function (userId, doc, fieldNames, modifier) {\n      return false;\n    },\n\n    remove: function (userId, doc) {\n      return false;\n    }\n  });\n}\n","AddStudentInformationController = RouteController.extend({\n  \n  // A place to put your subscriptions\n  // this.subscribe('items');\n  // // add the subscription to the waitlist\n  // this.subscribe('item', this.params._id).wait();\n  \n  subscriptions: function() {\n  },\n  \n  // Subscriptions or other things we want to \"wait\" on. This also\n  // automatically uses the loading hook. That's the only difference between\n  // this option and the subscriptions option above.\n  // return Meteor.subscribe('post', this.params._id);\n  \n  waitOn: function () {\n  },\n  \n  // A data function that can be used to automatically set the data context for\n  // our layout. This function can also be used by hooks and plugins. For\n  // example, the \"dataNotFound\" plugin calls this function to see if it\n  // returns a null value, and if so, renders the not found template.\n  // return Posts.findOne({_id: this.params._id});\n  \n  data: function () {\n  },\n  \n  // You can provide any of the hook options\n  \n  onRun: function () {\n    this.next();\n  },\n  onRerun: function () {\n    this.next();\n  },\n  onBeforeAction: function () {\n    this.next();\n  },\n  \n  // The same thing as providing a function as the second parameter. You can\n  // also provide a string action name here which will be looked up on a Controller\n  // when the route runs. More on Controllers later. Note, the action function\n  // is optional. By default a route will render its template, layout and\n  // regions automatically.\n  // Example:\n  //  action: 'myActionFunction'\n  \n  action: function () {\n    this.render();\n  },\n  onAfterAction: function () {\n  },\n  onStop: function () {\n  }\n});\n","HomeController = RouteController.extend({\n  \n  // A place to put your subscriptions\n  // this.subscribe('items');\n  // // add the subscription to the waitlist\n  // this.subscribe('item', this.params._id).wait();\n  \n  subscriptions: function() {\n  },\n  \n  // Subscriptions or other things we want to \"wait\" on. This also\n  // automatically uses the loading hook. That's the only difference between\n  // this option and the subscriptions option above.\n  // return Meteor.subscribe('post', this.params._id);\n  \n  waitOn: function () {\n  },\n  \n  // A data function that can be used to automatically set the data context for\n  // our layout. This function can also be used by hooks and plugins. For\n  // example, the \"dataNotFound\" plugin calls this function to see if it\n  // returns a null value, and if so, renders the not found template.\n  // return Posts.findOne({_id: this.params._id});\n  \n  data: function () {\n  },\n  \n  // You can provide any of the hook options\n  \n  onRun: function () {\n    this.next();\n  },\n  onRerun: function () {\n    this.next();\n  },\n  onBeforeAction: function () {\n    this.next();\n  },\n  \n  // The same thing as providing a function as the second parameter. You can\n  // also provide a string action name here which will be looked up on a Controller\n  // when the route runs. More on Controllers later. Note, the action function\n  // is optional. By default a route will render its template, layout and\n  // regions automatically.\n  // Example:\n  //  action: 'myActionFunction'\n  \n  action: function () {\n    this.render();\n  },\n  onAfterAction: function () {\n  },\n  onStop: function () {\n  }\n});\n","LoginController = RouteController.extend({\n  \n  // A place to put your subscriptions\n  // this.subscribe('items');\n  // // add the subscription to the waitlist\n  // this.subscribe('item', this.params._id).wait();\n  \n  subscriptions: function() {\n  },\n  \n  // Subscriptions or other things we want to \"wait\" on. This also\n  // automatically uses the loading hook. That's the only difference between\n  // this option and the subscriptions option above.\n  // return Meteor.subscribe('post', this.params._id);\n  \n  waitOn: function () {\n  },\n  \n  // A data function that can be used to automatically set the data context for\n  // our layout. This function can also be used by hooks and plugins. For\n  // example, the \"dataNotFound\" plugin calls this function to see if it\n  // returns a null value, and if so, renders the not found template.\n  // return Posts.findOne({_id: this.params._id});\n  \n  data: function () {\n  },\n  \n  // You can provide any of the hook options\n  \n  onRun: function () {\n    this.next();\n  },\n  onRerun: function () {\n    this.next();\n  },\n  onBeforeAction: function () {\n    this.next();\n  },\n  \n  // The same thing as providing a function as the second parameter. You can\n  // also provide a string action name here which will be looked up on a Controller\n  // when the route runs. More on Controllers later. Note, the action function\n  // is optional. By default a route will render its template, layout and\n  // regions automatically.\n  // Example:\n  //  action: 'myActionFunction'\n  \n  action: function () {\n    this.render();\n  },\n  onAfterAction: function () {\n  },\n  onStop: function () {\n  }\n});\n","ManageUniversityInfoController = RouteController.extend({\n  \n  // A place to put your subscriptions\n  // this.subscribe('items');\n  // // add the subscription to the waitlist\n  // this.subscribe('item', this.params._id).wait();\n  \n  subscriptions: function() {\n  },\n  \n  // Subscriptions or other things we want to \"wait\" on. This also\n  // automatically uses the loading hook. That's the only difference between\n  // this option and the subscriptions option above.\n  // return Meteor.subscribe('post', this.params._id);\n  \n  waitOn: function () {\n  },\n  \n  // A data function that can be used to automatically set the data context for\n  // our layout. This function can also be used by hooks and plugins. For\n  // example, the \"dataNotFound\" plugin calls this function to see if it\n  // returns a null value, and if so, renders the not found template.\n  // return Posts.findOne({_id: this.params._id});\n  \n  data: function () {\n  },\n  \n  // You can provide any of the hook options\n  \n  onRun: function () {\n    this.next();\n  },\n  onRerun: function () {\n    this.next();\n  },\n  onBeforeAction: function () {\n    this.next();\n  },\n  \n  // The same thing as providing a function as the second parameter. You can\n  // also provide a string action name here which will be looked up on a Controller\n  // when the route runs. More on Controllers later. Note, the action function\n  // is optional. By default a route will render its template, layout and\n  // regions automatically.\n  // Example:\n  //  action: 'myActionFunction'\n  \n  action: function () {\n    this.render();\n  },\n  onAfterAction: function () {\n  },\n  onStop: function () {\n  }\n});\n","RegisterController = RouteController.extend({\n  \n  // A place to put your subscriptions\n  // this.subscribe('items');\n  // // add the subscription to the waitlist\n  // this.subscribe('item', this.params._id).wait();\n  \n  subscriptions: function() {\n  },\n  \n  // Subscriptions or other things we want to \"wait\" on. This also\n  // automatically uses the loading hook. That's the only difference between\n  // this option and the subscriptions option above.\n  // return Meteor.subscribe('post', this.params._id);\n  \n  waitOn: function () {\n  },\n  \n  // A data function that can be used to automatically set the data context for\n  // our layout. This function can also be used by hooks and plugins. For\n  // example, the \"dataNotFound\" plugin calls this function to see if it\n  // returns a null value, and if so, renders the not found template.\n  // return Posts.findOne({_id: this.params._id});\n  \n  data: function () {\n  },\n  \n  // You can provide any of the hook options\n  \n  onRun: function () {\n    this.next();\n  },\n  onRerun: function () {\n    this.next();\n  },\n  onBeforeAction: function () {\n    this.next();\n  },\n  \n  // The same thing as providing a function as the second parameter. You can\n  // also provide a string action name here which will be looked up on a Controller\n  // when the route runs. More on Controllers later. Note, the action function\n  // is optional. By default a route will render its template, layout and\n  // regions automatically.\n  // Example:\n  //  action: 'myActionFunction'\n  \n  action: function () {\n    this.render();\n  },\n  onAfterAction: function () {\n  },\n  onStop: function () {\n  }\n});\n","ShowStudentInformationController = RouteController.extend({\n  \n  // A place to put your subscriptions\n  // this.subscribe('items');\n  // // add the subscription to the waitlist\n  // this.subscribe('item', this.params._id).wait();\n  \n  subscriptions: function() {\n  },\n  \n  // Subscriptions or other things we want to \"wait\" on. This also\n  // automatically uses the loading hook. That's the only difference between\n  // this option and the subscriptions option above.\n  // return Meteor.subscribe('post', this.params._id);\n  \n  waitOn: function () {\n  },\n  \n  // A data function that can be used to automatically set the data context for\n  // our layout. This function can also be used by hooks and plugins. For\n  // example, the \"dataNotFound\" plugin calls this function to see if it\n  // returns a null value, and if so, renders the not found template.\n  // return Posts.findOne({_id: this.params._id});\n  \n  data: function () {\n  },\n  \n  // You can provide any of the hook options\n  \n  onRun: function () {\n    this.next();\n  },\n  onRerun: function () {\n    this.next();\n  },\n  onBeforeAction: function () {\n    this.next();\n  },\n  \n  // The same thing as providing a function as the second parameter. You can\n  // also provide a string action name here which will be looked up on a Controller\n  // when the route runs. More on Controllers later. Note, the action function\n  // is optional. By default a route will render its template, layout and\n  // regions automatically.\n  // Example:\n  //  action: 'myActionFunction'\n  \n  action: function () {\n    this.render();\n  },\n  onAfterAction: function () {\n  },\n  onStop: function () {\n  }\n});\n","/*****************************************************************************/\n/*  Client and Server Methods */\n/*****************************************************************************/\n\nMeteor.methods({\n  'lib/method_name': function () {\n    \n    if (this.isSimulation) {\n    //   // do some client stuff while waiting for\n    //   // result from server.\n    //   return;\n    }\n    // server method logic\n  }\n});\n","Router.configure({\n  layoutTemplate: 'MasterLayout',\n  loadingTemplate: 'Loading',\n  notFoundTemplate: 'NotFound'\n});\n\n\nRouter.route('/', {\n  name: 'home',\n  where: 'client'\n});\n\nRouter.route('/add_student_information', {\n  name: 'addStudentInformation',\n  where: 'client'\n});\n\nRouter.route('/show_student_information', {\n  name: 'showStudentInformation',\n  where: 'client'\n});\n\nRouter.route('/edit_student_information/:_id', {\n  name: 'editStudentInformation',\n  where: 'client'\n});\n\nRouter.route('register', {\n  name: 'register',\n  controller: 'RegisterController',\n  where: 'client'\n});\n\nRouter.route('login', {\n  name: 'login',\n  controller: 'LoginController',\n  where: 'client'\n});\n\nRouter.route('admin/manage_university_info', {\n  name: 'manageUniversityInfo',\n  where: 'client'\n});","Meteor.startup(function () {\n});\n","/*****************************************************************************/\n/*  Server Methods */\n/*****************************************************************************/\n\nMeteor.methods({\n  'server/method_name': function () {\n    // server method logic\n  },\n  'server/users/delete_user': function (userID) {\n  \tMeteor.users.remove(userID);\n  },\n});\n","import { Meteor } from 'meteor/meteor';\n\nMeteor.startup(() => {\n  // code to run on server at startup\n});\n"]}